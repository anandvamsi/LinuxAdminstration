
Disk utilization commands
cpu and main memory 
Networking commands.
Process related commands
vim editor

User Administration
Package installation:- java,python.
Apache installation




Disk utilization commands
 - df -h  For disk space
 Understand freespace,diskspace,partitions,mount points
 - du -sh  filename for the identifing the filename


To know the total RAM consumed total memory
 free -m

- top commands:- short cuts
shift+m => to sort by the memory
shift+p => to sort by the cpu

top command to list only one process
top -H -p 933

-  process commands
 ps -aux  To show all the running process
 ps -aux | grep <processname>

-process grep
pgrep sshd
911
1056
1075


- Terminting the process
 kill <PID>
 kill -9 <PID>


 - watch command with CPU
 watch -n 1 "ps aux | sort -rk 3,3  | head -n 4"

process commands to check the threads
ps -T -p <PID>



Networking related commands

ifconfig
will show the IP address of all ethernet interfaces

ifconfig -a will show the 

hostname will show the name of server
mii-tool will show ethernet interfaces status

files associated with networks

/etc/hosts
/etc/resolv.conf
/etc/network/interfaces







checking connectivity b/w nodes
anand@ubuntu:~$ ping 127.0.0.1
- c :- denotes the count
#ping -c2 <IP address>

telnet :- check the connectivty in port
telnet <ipaddress> port

netstat -ntlp : Listing all the opened tcp ports
netstat -ntulp :- listing all the UDP and TCP ports.


To check the connecvity b/w hosts which show the connect 
mtr 8.8.8.8





 Understanding VIM editor
 -------------------------
 Despite there are many editor like nano,vi,vim,emacs..vim is better

vim filename

press I to insert to data
esp- :wq quite and quit

:wq! write and quit forcefully
:nu Enable the numbers
:1 :- will go to linenumber


- dd to cut thelines
- 3dd to cut 3 lines
- yy to past the lines
- dG :- delete end of file
- dgg :- delete to begining of file.

/search :- search of word
%s/<txt to search>/<txt to replace>/g
%v/./d :- To remove  the empty lines





User administration Commands
#Adding a user
useradd -m <username>

contents of :-
/etc/passwd
{username,password,uid,gid,shell}
/etc/shadow

setting password
passwd <username>

Groups
Every user will have one primary groups and secoundry groups.
id <username> will get you all the groups


Enabling sudo user
usermod -aG sudo rajesh



ssh (secure shell)
---------------------
port : 22
conf directory :/etc/ssh/sshd_config
logfile :- /var/log/auth.log

syntax to login to server
#ssh <username>@<ip/hostname>

To copy the file 
#scp <src_location> <user>@<ip/hostnamn>:<location with permission to user>





#Creating a ssh key
ssh-keygen
Generating public/private rsa key pair.
Enter file in which to save the key (/home/rajesh/.ssh/id_rsa):
Created directory '/home/rajesh/.ssh'.
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/rajesh/.ssh/id_rsa.
Your public key has been saved in /home/rajesh/.ssh/id_rsa.pub.
The key fingerprint is:
cd:43:54:58:86:92:7d:38:81:fb:28:5d:f0:aa:44:79 rajesh@ubuntu
The key's randomart image is:
+--[ RSA 2048]----+
|         +oB+    |
|        =.*..    |
|       . =.o     |
|      o E+o      |
|     . oS=+      |
|      o + ..     |
|     . o         |
|      .          |
|                 |
+-----------------+

public key and secret key
/.ssh$ ls
id_rsa  id_rsa.pub
cat id_rsa.pub > authorized_keys


#Installing the package
apt-get install apache2


systemctl status apache2
start
restart
stop

systemctl enable apache2

remove the packate package
apt-get remove apache2

Log file direcotry
/var/log/apache2/access.log

config file directory
/etc/apache2


java instllation

#apt-get install openjdk-7-jdk

#which java
/usr/bin/java

#java version "1.7.0_201"
OpenJDK Runtime Environment (IcedTea 2.6.17) (7u211-2.6.17-0ubuntu0.1)
OpenJDK 64-Bit Server VM (build 24.201-b00, mixed mode)
root@ubuntu:/etc/apache2#



wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
bash -x Miniconda3-latest-Linux-x86_64.sh


#Creating new env
(base) root@ubuntu:~/miniconda3/bin# conda create --name myenv
WARNING: A conda environment already exists at '/home/anand/miniconda3/envs/myenv'
Remove existing environment (y/[n])? y

Collecting package metadata (current_repodata.json): done
Solving environment: done

## Package Plan ##

  environment location: /home/anand/miniconda3/envs/myenv



Proceed ([y]/n)? y

Preparing transaction: done
Verifying transaction: done
Executing transaction: done
#
# To activate this environment, use
#
#     $ conda activate myenv
#
# To deactivate an active environment, use
#
#     $ conda deactivate


Note: Create a new env with version or package
conda create -n myenv python=3.6
conda create -n myenv scipy=0.15.0

#Activating to new env
conda activate myenv


##Installing a package
conda install mysql-connector-python

import mysql.connector

#To deactivate
conda deactivate
